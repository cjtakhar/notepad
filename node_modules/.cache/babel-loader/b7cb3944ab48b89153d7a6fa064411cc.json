{"ast":null,"code":"var _jsxFileName = \"/Users/cj/WebDev/React/notepad/src/components/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const database = [{\n    username: \"user1\",\n    password: \"pass1\"\n  }, {\n    username: \"user2\",\n    password: \"pass2\"\n  }];\n  const errors = {\n    uname: \"invalid username\",\n    pass: \"invalid password\"\n  };\n\n  const handleSubmit = event => {\n    // prevent page reload\n    event.preventDefault();\n    var {\n      uname,\n      pass\n    } = document.forms[0]; // find user login info\n\n    const userData = database.find(user => user.username === uname.value); // compare user info\n\n    if (userData) {\n      if (userData.password !== pass.value) {\n        // invalid password\n        setErrorMessages({\n          name: \"pass\",\n          message: errors.pass\n        });\n      } else {\n        setIsSubmitted(true);\n      }\n    } else {\n      // username not found\n      setErrorMessages({\n        name: \"uname\",\n        message: errors.uname\n      });\n    }\n  };\n\n  const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"uname\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), renderErrorMessage(\"uname\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"pass\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), renderErrorMessage(\"pass\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 11\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      classsName: \"title\",\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), isSubmitted ? History.pushState(\"/src/components/notepad.js\") : renderForm]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 8\n  }, this);\n}\n\n_s(Login, \"xHac37XC1FUyoDun112aRZB/AH4=\");\n\n_c = Login;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/cj/WebDev/React/notepad/src/components/login.js"],"names":["React","useState","useEffect","useHistory","Login","errorMessages","setErrorMessages","isSubmitted","setIsSubmitted","database","username","password","errors","uname","pass","handleSubmit","event","preventDefault","document","forms","userData","find","user","value","name","message","renderErrorMessage","renderForm","History","pushState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Login() {\n    const [errorMessages, setErrorMessages] = useState({});\n    const [isSubmitted, setIsSubmitted] = useState(false);\n\n    const database = [\n        {\n            username: \"user1\",\n            password: \"pass1\"\n        },\n        {\n            username: \"user2\",\n            password: \"pass2\"\n        }\n    ];\n\n    const errors = {\n        uname: \"invalid username\",\n        pass: \"invalid password\"\n    };\n\n    const handleSubmit = (event) => {\n        // prevent page reload\n        event.preventDefault();\n        var { uname, pass } = document.forms[0]\n        // find user login info\n        const userData = database.find((user) => user.username === uname.value) \n        // compare user info\n        if (userData) {\n            if (userData.password !== pass.value) {\n                // invalid password\n                setErrorMessages({name: \"pass\", message: errors.pass});\n            } else {\n                setIsSubmitted(true);\n            }\n        }   else {\n            // username not found\n            setErrorMessages({name: \"uname\", message: errors.uname});\n        }\n    };\n\n    const renderErrorMessage = (name) =>\n        name === errorMessages.name && (\n        <div className=\"error\">{errorMessages.message}</div>\n        );\n    \n    const renderForm = (\n          <div className=\"form\">\n            <form onSubmit={handleSubmit}>\n                <div className=\"input-container\">\n                    <label>Username</label>\n                    <input type=\"text\" name=\"uname\" required />\n                    {renderErrorMessage(\"uname\")}\n                </div>\n                <div className=\"input-container\">\n                    <label>Password</label>\n                    <input type=\"password\" name=\"pass\" required />\n                    {renderErrorMessage(\"pass\")}\n                </div>\n                <div className=\"button-container\">\n                    <input type=\"submit\" />\n                </div>\n            </form>\n        </div>\n    )\n    return (\n       <div className=\"login-form\">\n            <div classsName=\"title\">Sign In</div>\n            {isSubmitted ? History.pushState(\"/src/components/notepad.js\") : renderForm}\n        </div>\n    )\n};\n\n"]},"metadata":{},"sourceType":"module"}